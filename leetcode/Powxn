// wip

//Implement pow(x, n).

// Notes this is O(n) ...
// We could do better
// For example to compute x^4,
// we only need x^2 * x^2
// and to get x^2 we use x * x
// in other words, we don't have to compute and store x^3
// to compute x^7 we compute x^4 * x^2 * x
// to compute x^19 we compute x^16 * x^2 * x

class Solution {
public:
    double myPow(double x, int n) {
        int absN = abs(n);
        int size = (absN + 3) / 2;
        vector<double> v(size, 1);
        for (int i = 1; i < size; ++i) {
            v[i] = x * v[i - 1];
        }
        int half = absN / 2;
        double result = v[half] * v[absN - half];
        return n > 0 ? result : 1 / result;
    }
};

// failed test case: 0.00001 ^ 2147483647
